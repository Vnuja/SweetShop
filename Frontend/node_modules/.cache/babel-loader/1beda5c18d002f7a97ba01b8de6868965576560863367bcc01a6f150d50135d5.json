{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nethasha De silva\\\\Desktop\\\\inventory\\\\inventory\\\\frontend\\\\src\\\\ItemComponent\\\\ItemRepoart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport './itemrepoart.css';\nimport { useReactToPrint } from 'react-to-print';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nfunction ItemRepoart() {\n  _s();\n  const componentPDF = useRef();\n  const [countlist, setcountlist] = useState([]);\n  const [customerlist, setcustomerlist] = useState([]);\n  const generatePDF = useReactToDownload({\n    content: () => componentPDF.current,\n    documentTitle: 'Total Item Report',\n    onBeforeGetContent: () => {\n      return Promise.resolve();\n    },\n    onAfterPrint: () => {\n      alert('Data saved in PDF');\n    }\n  });\n\n  // Fetch data\n  const getfetchdata = async () => {\n    try {\n      const data = await axios.get('http://localhost:8020/item_count');\n      const {\n        count\n      } = data.data;\n      setcountlist(count);\n      setcustomerlist(data.data.data);\n    } catch (err) {\n      alert(err);\n    }\n  };\n  useEffect(() => {\n    getfetchdata();\n  }, []);\n\n  // Sort data by price\n  const sortedCustomerList = [...customerlist].sort((a, b) => a.price - b.price);\n\n  // Prepare data for the bar chart\n  const chartData = {\n    labels: sortedCustomerList.map(order => order.productsName),\n    datasets: [{\n      label: 'Product Price',\n      data: sortedCustomerList.map(order => order.price),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repoart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Total Products :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), countlist !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Products: \", countlist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Products Details :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentPDF,\n      className: \"pdf-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pdf-title\",\n        children: \"Total Products Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: sortedCustomerList.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"product-name\",\n            children: e.productsName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Product ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 32\n            }, this), \" \", e.productId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Product Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 32\n            }, this), \" \", e.productType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 32\n            }, this), \" $\", e.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, e.productId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(ItemRepoart, \"LYohucDtuWVkeX5IajQDP4D6lik=\", true);\n_c = ItemRepoart;\nexport default ItemRepoart;\nvar _c;\n$RefreshReg$(_c, \"ItemRepoart\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","useReactToPrint","jsxDEV","_jsxDEV","register","ItemRepoart","_s","componentPDF","countlist","setcountlist","customerlist","setcustomerlist","generatePDF","useReactToDownload","content","current","documentTitle","onBeforeGetContent","Promise","resolve","onAfterPrint","alert","getfetchdata","data","get","count","err","sortedCustomerList","sort","a","b","price","chartData","labels","map","order","productsName","datasets","label","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","e","productId","productType","_c","$RefreshReg$"],"sources":["C:/Users/Nethasha De silva/Desktop/inventory/inventory/frontend/src/ItemComponent/ItemRepoart.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\nimport './itemrepoart.css';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n// Register ChartJS components\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\nfunction ItemRepoart() {\r\n    const componentPDF = useRef();\r\n    const [countlist, setcountlist] = useState([]);\r\n    const [customerlist, setcustomerlist] = useState([]);\r\n\r\n    const generatePDF = useReactToDownload({\r\n        content: () => componentPDF.current,\r\n        documentTitle: 'Total Item Report',\r\n        onBeforeGetContent: () => {\r\n            return Promise.resolve();\r\n        },\r\n        onAfterPrint: () => {\r\n            alert('Data saved in PDF');\r\n        }\r\n    });\r\n\r\n    // Fetch data\r\n    const getfetchdata = async () => {\r\n        try {\r\n            const data = await axios.get('http://localhost:8020/item_count');\r\n            const { count } = data.data;\r\n            setcountlist(count);\r\n            setcustomerlist(data.data.data);\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getfetchdata();\r\n    }, []);\r\n\r\n    // Sort data by price\r\n    const sortedCustomerList = [...customerlist].sort((a, b) => a.price - b.price);\r\n\r\n    // Prepare data for the bar chart\r\n    const chartData = {\r\n        labels: sortedCustomerList.map(order => order.productsName),\r\n        datasets: [\r\n            {\r\n                label: 'Product Price',\r\n                data: sortedCustomerList.map(order => order.price),\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div className='repoart'>\r\n            <h3>Total Products :</h3>\r\n            {countlist !== null ? (\r\n                <p>Total Products: {countlist}</p>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n\r\n            <h3>Products Details :</h3>\r\n\r\n            {/* Content to be printed */}\r\n            <div ref={componentPDF} className='pdf-content'>\r\n                <h2 className='pdf-title'>Total Products Report</h2>\r\n\r\n                {/* Bar chart */}\r\n                <div className='chart-container'>\r\n                    <Bar data={chartData} />\r\n                </div>\r\n\r\n                {/* Cards */}\r\n                <div className='cards-container'>\r\n                    {sortedCustomerList.map((e) => (\r\n                        <div key={e.productId} className='product-card'>\r\n                            <h4 className='product-name'>{e.productsName}</h4>\r\n                            <p><strong>Product ID:</strong> {e.productId}</p>\r\n                            <p><strong>Product Type:</strong> {e.productType}</p>\r\n                            <p><strong>Price:</strong> ${e.price}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemRepoart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}